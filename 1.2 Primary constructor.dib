#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"languageName":"csharp","name":"csharp"}]}}

#!markdown

# Primary constructors

Primary constructors are now available on classes and structs.

#!csharp

public class Point(int x, int y) {
    public string ToString() {
        return $"({x}, {y})";
    }   
}

var p1 = new Point(1, 2);

Console.WriteLine(p1.ToString());

#!markdown

It's important to understand that primary constructor parameters are considered as parameters in the scope of your class. They aren't members of the class.

#!csharp

// Parameters of primary constructors are only internally available.
Console.WriteLine($"({p1.x}, {p1.y})");

#!csharp

public class PointBad(int x, int y) {
    public string ToString() {
        return $"({this.x}, {this.y})"; // Throws an error
    }
}

#!csharp

// While primary constructors on record made the parameters public.
public record Point2(int X, int Y);

var p2 = new Point2(1, 2);

Console.WriteLine($"{p2.X}, {p2.Y}");

#!csharp

// You are forced to use the primary constructor
public class Person(string _firstName, string _lastName)
{
    private string Email { get; set; }

    public Person(string firstName, string lastName, string email)
        :this(firstName, lastName) // required to call the primary constructor
    {
        Email = email;
    }
}
